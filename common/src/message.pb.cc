// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ArmMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AutoMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CamMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CanMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CommMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OdrvMessage;
}  // namespace protobuf_message_2eproto
namespace vanguard {
class StandardMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StandardMessage>
      _instance;
  const ::vanguard::CommMessage* comm_;
  const ::vanguard::CanMessage* can_;
  const ::vanguard::ArmMessage* arm_;
  const ::vanguard::OdrvMessage* odrv_;
  const ::vanguard::CamMessage* cam_;
  const ::vanguard::AutoMessage* auto__;
} _StandardMessage_default_instance_;
class CommMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommMessage>
      _instance;
} _CommMessage_default_instance_;
class CanMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CanMessage>
      _instance;
} _CanMessage_default_instance_;
class ArmMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArmMessage>
      _instance;
} _ArmMessage_default_instance_;
class OdrvMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OdrvMessage>
      _instance;
} _OdrvMessage_default_instance_;
class CamMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CamMessage>
      _instance;
} _CamMessage_default_instance_;
class AutoMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoMessage>
      _instance;
} _AutoMessage_default_instance_;
}  // namespace vanguard
namespace protobuf_message_2eproto {
static void InitDefaultsStandardMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vanguard::_StandardMessage_default_instance_;
    new (ptr) ::vanguard::StandardMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vanguard::StandardMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_StandardMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsStandardMessage}, {
      &protobuf_message_2eproto::scc_info_CommMessage.base,
      &protobuf_message_2eproto::scc_info_CanMessage.base,
      &protobuf_message_2eproto::scc_info_ArmMessage.base,
      &protobuf_message_2eproto::scc_info_OdrvMessage.base,
      &protobuf_message_2eproto::scc_info_CamMessage.base,
      &protobuf_message_2eproto::scc_info_AutoMessage.base,}};

static void InitDefaultsCommMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vanguard::_CommMessage_default_instance_;
    new (ptr) ::vanguard::CommMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vanguard::CommMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CommMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommMessage}, {}};

static void InitDefaultsCanMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vanguard::_CanMessage_default_instance_;
    new (ptr) ::vanguard::CanMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vanguard::CanMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CanMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCanMessage}, {}};

static void InitDefaultsArmMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vanguard::_ArmMessage_default_instance_;
    new (ptr) ::vanguard::ArmMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vanguard::ArmMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArmMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArmMessage}, {}};

static void InitDefaultsOdrvMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vanguard::_OdrvMessage_default_instance_;
    new (ptr) ::vanguard::OdrvMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vanguard::OdrvMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OdrvMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOdrvMessage}, {}};

static void InitDefaultsCamMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vanguard::_CamMessage_default_instance_;
    new (ptr) ::vanguard::CamMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vanguard::CamMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CamMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCamMessage}, {}};

static void InitDefaultsAutoMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::vanguard::_AutoMessage_default_instance_;
    new (ptr) ::vanguard::AutoMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vanguard::AutoMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AutoMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAutoMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StandardMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CanMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArmMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OdrvMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CamMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AutoMessage.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::StandardMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::StandardMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::StandardMessage, dest_),
  offsetof(::vanguard::StandardMessageDefaultTypeInternal, comm_),
  offsetof(::vanguard::StandardMessageDefaultTypeInternal, can_),
  offsetof(::vanguard::StandardMessageDefaultTypeInternal, arm_),
  offsetof(::vanguard::StandardMessageDefaultTypeInternal, odrv_),
  offsetof(::vanguard::StandardMessageDefaultTypeInternal, cam_),
  offsetof(::vanguard::StandardMessageDefaultTypeInternal, auto__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::StandardMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::CommMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::CanMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::CanMessage, hello_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::CanMessage, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::ArmMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::OdrvMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::CamMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vanguard::AutoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::vanguard::StandardMessage)},
  { 13, -1, sizeof(::vanguard::CommMessage)},
  { 18, -1, sizeof(::vanguard::CanMessage)},
  { 25, -1, sizeof(::vanguard::ArmMessage)},
  { 30, -1, sizeof(::vanguard::OdrvMessage)},
  { 35, -1, sizeof(::vanguard::CamMessage)},
  { 40, -1, sizeof(::vanguard::AutoMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::vanguard::_StandardMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vanguard::_CommMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vanguard::_CanMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vanguard::_ArmMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vanguard::_OdrvMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vanguard::_CamMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vanguard::_AutoMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\022\010vanguard\"\216\002\n\017StandardMe"
      "ssage\022\014\n\004dest\030\001 \001(\r\022%\n\004comm\030\002 \001(\0132\025.vang"
      "uard.CommMessageH\000\022#\n\003can\030\003 \001(\0132\024.vangua"
      "rd.CanMessageH\000\022#\n\003arm\030\004 \001(\0132\024.vanguard."
      "ArmMessageH\000\022%\n\004odrv\030\005 \001(\0132\025.vanguard.Od"
      "rvMessageH\000\022#\n\003cam\030\006 \001(\0132\024.vanguard.CamM"
      "essageH\000\022%\n\004auto\030\007 \001(\0132\025.vanguard.AutoMe"
      "ssageH\000B\t\n\007message\"\r\n\013CommMessage\")\n\nCan"
      "Message\022\r\n\005hello\030\001 \001(\t\022\014\n\004data\030\002 \003(\r\"\014\n\n"
      "ArmMessage\"\r\n\013OdrvMessage\"\014\n\nCamMessage\""
      "\r\n\013AutoMessageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 422);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
namespace vanguard {

// ===================================================================

void StandardMessage::InitAsDefaultInstance() {
  ::vanguard::_StandardMessage_default_instance_.comm_ = const_cast< ::vanguard::CommMessage*>(
      ::vanguard::CommMessage::internal_default_instance());
  ::vanguard::_StandardMessage_default_instance_.can_ = const_cast< ::vanguard::CanMessage*>(
      ::vanguard::CanMessage::internal_default_instance());
  ::vanguard::_StandardMessage_default_instance_.arm_ = const_cast< ::vanguard::ArmMessage*>(
      ::vanguard::ArmMessage::internal_default_instance());
  ::vanguard::_StandardMessage_default_instance_.odrv_ = const_cast< ::vanguard::OdrvMessage*>(
      ::vanguard::OdrvMessage::internal_default_instance());
  ::vanguard::_StandardMessage_default_instance_.cam_ = const_cast< ::vanguard::CamMessage*>(
      ::vanguard::CamMessage::internal_default_instance());
  ::vanguard::_StandardMessage_default_instance_.auto__ = const_cast< ::vanguard::AutoMessage*>(
      ::vanguard::AutoMessage::internal_default_instance());
}
void StandardMessage::set_allocated_comm(::vanguard::CommMessage* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    set_has_comm();
    message_.comm_ = comm;
  }
  // @@protoc_insertion_point(field_set_allocated:vanguard.StandardMessage.comm)
}
void StandardMessage::set_allocated_can(::vanguard::CanMessage* can) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (can) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      can = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, can, submessage_arena);
    }
    set_has_can();
    message_.can_ = can;
  }
  // @@protoc_insertion_point(field_set_allocated:vanguard.StandardMessage.can)
}
void StandardMessage::set_allocated_arm(::vanguard::ArmMessage* arm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (arm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arm, submessage_arena);
    }
    set_has_arm();
    message_.arm_ = arm;
  }
  // @@protoc_insertion_point(field_set_allocated:vanguard.StandardMessage.arm)
}
void StandardMessage::set_allocated_odrv(::vanguard::OdrvMessage* odrv) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (odrv) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      odrv = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, odrv, submessage_arena);
    }
    set_has_odrv();
    message_.odrv_ = odrv;
  }
  // @@protoc_insertion_point(field_set_allocated:vanguard.StandardMessage.odrv)
}
void StandardMessage::set_allocated_cam(::vanguard::CamMessage* cam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (cam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cam, submessage_arena);
    }
    set_has_cam();
    message_.cam_ = cam;
  }
  // @@protoc_insertion_point(field_set_allocated:vanguard.StandardMessage.cam)
}
void StandardMessage::set_allocated_auto_(::vanguard::AutoMessage* auto_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (auto_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      auto_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auto_, submessage_arena);
    }
    set_has_auto_();
    message_.auto__ = auto_;
  }
  // @@protoc_insertion_point(field_set_allocated:vanguard.StandardMessage.auto)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StandardMessage::kDestFieldNumber;
const int StandardMessage::kCommFieldNumber;
const int StandardMessage::kCanFieldNumber;
const int StandardMessage::kArmFieldNumber;
const int StandardMessage::kOdrvFieldNumber;
const int StandardMessage::kCamFieldNumber;
const int StandardMessage::kAutoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StandardMessage::StandardMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_StandardMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vanguard.StandardMessage)
}
StandardMessage::StandardMessage(const StandardMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dest_ = from.dest_;
  clear_has_message();
  switch (from.message_case()) {
    case kComm: {
      mutable_comm()->::vanguard::CommMessage::MergeFrom(from.comm());
      break;
    }
    case kCan: {
      mutable_can()->::vanguard::CanMessage::MergeFrom(from.can());
      break;
    }
    case kArm: {
      mutable_arm()->::vanguard::ArmMessage::MergeFrom(from.arm());
      break;
    }
    case kOdrv: {
      mutable_odrv()->::vanguard::OdrvMessage::MergeFrom(from.odrv());
      break;
    }
    case kCam: {
      mutable_cam()->::vanguard::CamMessage::MergeFrom(from.cam());
      break;
    }
    case kAuto: {
      mutable_auto_()->::vanguard::AutoMessage::MergeFrom(from.auto_());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vanguard.StandardMessage)
}

void StandardMessage::SharedCtor() {
  dest_ = 0u;
  clear_has_message();
}

StandardMessage::~StandardMessage() {
  // @@protoc_insertion_point(destructor:vanguard.StandardMessage)
  SharedDtor();
}

void StandardMessage::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void StandardMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StandardMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StandardMessage& StandardMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_StandardMessage.base);
  return *internal_default_instance();
}


void StandardMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:vanguard.StandardMessage)
  switch (message_case()) {
    case kComm: {
      delete message_.comm_;
      break;
    }
    case kCan: {
      delete message_.can_;
      break;
    }
    case kArm: {
      delete message_.arm_;
      break;
    }
    case kOdrv: {
      delete message_.odrv_;
      break;
    }
    case kCam: {
      delete message_.cam_;
      break;
    }
    case kAuto: {
      delete message_.auto__;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void StandardMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vanguard.StandardMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dest_ = 0u;
  clear_message();
  _internal_metadata_.Clear();
}

bool StandardMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vanguard.StandardMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vanguard.CommMessage comm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_comm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vanguard.CanMessage can = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_can()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vanguard.ArmMessage arm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vanguard.OdrvMessage odrv = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_odrv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vanguard.CamMessage cam = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vanguard.AutoMessage auto = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auto_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vanguard.StandardMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vanguard.StandardMessage)
  return false;
#undef DO_
}

void StandardMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vanguard.StandardMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dest = 1;
  if (this->dest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dest(), output);
  }

  // .vanguard.CommMessage comm = 2;
  if (has_comm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_comm(), output);
  }

  // .vanguard.CanMessage can = 3;
  if (has_can()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_can(), output);
  }

  // .vanguard.ArmMessage arm = 4;
  if (has_arm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_arm(), output);
  }

  // .vanguard.OdrvMessage odrv = 5;
  if (has_odrv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_odrv(), output);
  }

  // .vanguard.CamMessage cam = 6;
  if (has_cam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_cam(), output);
  }

  // .vanguard.AutoMessage auto = 7;
  if (has_auto_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_auto_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vanguard.StandardMessage)
}

::google::protobuf::uint8* StandardMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vanguard.StandardMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dest = 1;
  if (this->dest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dest(), target);
  }

  // .vanguard.CommMessage comm = 2;
  if (has_comm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_comm(), deterministic, target);
  }

  // .vanguard.CanMessage can = 3;
  if (has_can()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_can(), deterministic, target);
  }

  // .vanguard.ArmMessage arm = 4;
  if (has_arm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_arm(), deterministic, target);
  }

  // .vanguard.OdrvMessage odrv = 5;
  if (has_odrv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_odrv(), deterministic, target);
  }

  // .vanguard.CamMessage cam = 6;
  if (has_cam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_cam(), deterministic, target);
  }

  // .vanguard.AutoMessage auto = 7;
  if (has_auto_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_auto_(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vanguard.StandardMessage)
  return target;
}

size_t StandardMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vanguard.StandardMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 dest = 1;
  if (this->dest() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dest());
  }

  switch (message_case()) {
    // .vanguard.CommMessage comm = 2;
    case kComm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.comm_);
      break;
    }
    // .vanguard.CanMessage can = 3;
    case kCan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.can_);
      break;
    }
    // .vanguard.ArmMessage arm = 4;
    case kArm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.arm_);
      break;
    }
    // .vanguard.OdrvMessage odrv = 5;
    case kOdrv: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.odrv_);
      break;
    }
    // .vanguard.CamMessage cam = 6;
    case kCam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.cam_);
      break;
    }
    // .vanguard.AutoMessage auto = 7;
    case kAuto: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.auto__);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StandardMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vanguard.StandardMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StandardMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StandardMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vanguard.StandardMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vanguard.StandardMessage)
    MergeFrom(*source);
  }
}

void StandardMessage::MergeFrom(const StandardMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vanguard.StandardMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dest() != 0) {
    set_dest(from.dest());
  }
  switch (from.message_case()) {
    case kComm: {
      mutable_comm()->::vanguard::CommMessage::MergeFrom(from.comm());
      break;
    }
    case kCan: {
      mutable_can()->::vanguard::CanMessage::MergeFrom(from.can());
      break;
    }
    case kArm: {
      mutable_arm()->::vanguard::ArmMessage::MergeFrom(from.arm());
      break;
    }
    case kOdrv: {
      mutable_odrv()->::vanguard::OdrvMessage::MergeFrom(from.odrv());
      break;
    }
    case kCam: {
      mutable_cam()->::vanguard::CamMessage::MergeFrom(from.cam());
      break;
    }
    case kAuto: {
      mutable_auto_()->::vanguard::AutoMessage::MergeFrom(from.auto_());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void StandardMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vanguard.StandardMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StandardMessage::CopyFrom(const StandardMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vanguard.StandardMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StandardMessage::IsInitialized() const {
  return true;
}

void StandardMessage::Swap(StandardMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StandardMessage::InternalSwap(StandardMessage* other) {
  using std::swap;
  swap(dest_, other->dest_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StandardMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommMessage::CommMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CommMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vanguard.CommMessage)
}
CommMessage::CommMessage(const CommMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vanguard.CommMessage)
}

void CommMessage::SharedCtor() {
}

CommMessage::~CommMessage() {
  // @@protoc_insertion_point(destructor:vanguard.CommMessage)
  SharedDtor();
}

void CommMessage::SharedDtor() {
}

void CommMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommMessage& CommMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_CommMessage.base);
  return *internal_default_instance();
}


void CommMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vanguard.CommMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CommMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vanguard.CommMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:vanguard.CommMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vanguard.CommMessage)
  return false;
#undef DO_
}

void CommMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vanguard.CommMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vanguard.CommMessage)
}

::google::protobuf::uint8* CommMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vanguard.CommMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vanguard.CommMessage)
  return target;
}

size_t CommMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vanguard.CommMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vanguard.CommMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CommMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vanguard.CommMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vanguard.CommMessage)
    MergeFrom(*source);
  }
}

void CommMessage::MergeFrom(const CommMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vanguard.CommMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CommMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vanguard.CommMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommMessage::CopyFrom(const CommMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vanguard.CommMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommMessage::IsInitialized() const {
  return true;
}

void CommMessage::Swap(CommMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommMessage::InternalSwap(CommMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CanMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanMessage::kHelloFieldNumber;
const int CanMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanMessage::CanMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CanMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vanguard.CanMessage)
}
CanMessage::CanMessage(const CanMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hello_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hello().size() > 0) {
    hello_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hello_);
  }
  // @@protoc_insertion_point(copy_constructor:vanguard.CanMessage)
}

void CanMessage::SharedCtor() {
  hello_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CanMessage::~CanMessage() {
  // @@protoc_insertion_point(destructor:vanguard.CanMessage)
  SharedDtor();
}

void CanMessage::SharedDtor() {
  hello_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CanMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CanMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CanMessage& CanMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_CanMessage.base);
  return *internal_default_instance();
}


void CanMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vanguard.CanMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  hello_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CanMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vanguard.CanMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hello = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hello()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hello().data(), static_cast<int>(this->hello().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vanguard.CanMessage.hello"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vanguard.CanMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vanguard.CanMessage)
  return false;
#undef DO_
}

void CanMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vanguard.CanMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hello = 1;
  if (this->hello().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hello().data(), static_cast<int>(this->hello().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vanguard.CanMessage.hello");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hello(), output);
  }

  // repeated uint32 data = 2;
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _data_cached_byte_size_));
  }
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->data(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vanguard.CanMessage)
}

::google::protobuf::uint8* CanMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vanguard.CanMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hello = 1;
  if (this->hello().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hello().data(), static_cast<int>(this->hello().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vanguard.CanMessage.hello");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hello(), target);
  }

  // repeated uint32 data = 2;
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->data_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vanguard.CanMessage)
  return target;
}

size_t CanMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vanguard.CanMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 data = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string hello = 1;
  if (this->hello().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hello());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CanMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vanguard.CanMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CanMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vanguard.CanMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vanguard.CanMessage)
    MergeFrom(*source);
  }
}

void CanMessage::MergeFrom(const CanMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vanguard.CanMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.hello().size() > 0) {

    hello_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hello_);
  }
}

void CanMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vanguard.CanMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanMessage::CopyFrom(const CanMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vanguard.CanMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanMessage::IsInitialized() const {
  return true;
}

void CanMessage::Swap(CanMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanMessage::InternalSwap(CanMessage* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  hello_.Swap(&other->hello_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CanMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArmMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArmMessage::ArmMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ArmMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vanguard.ArmMessage)
}
ArmMessage::ArmMessage(const ArmMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vanguard.ArmMessage)
}

void ArmMessage::SharedCtor() {
}

ArmMessage::~ArmMessage() {
  // @@protoc_insertion_point(destructor:vanguard.ArmMessage)
  SharedDtor();
}

void ArmMessage::SharedDtor() {
}

void ArmMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArmMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArmMessage& ArmMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_ArmMessage.base);
  return *internal_default_instance();
}


void ArmMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vanguard.ArmMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ArmMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vanguard.ArmMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:vanguard.ArmMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vanguard.ArmMessage)
  return false;
#undef DO_
}

void ArmMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vanguard.ArmMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vanguard.ArmMessage)
}

::google::protobuf::uint8* ArmMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vanguard.ArmMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vanguard.ArmMessage)
  return target;
}

size_t ArmMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vanguard.ArmMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArmMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vanguard.ArmMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ArmMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArmMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vanguard.ArmMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vanguard.ArmMessage)
    MergeFrom(*source);
  }
}

void ArmMessage::MergeFrom(const ArmMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vanguard.ArmMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ArmMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vanguard.ArmMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmMessage::CopyFrom(const ArmMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vanguard.ArmMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmMessage::IsInitialized() const {
  return true;
}

void ArmMessage::Swap(ArmMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArmMessage::InternalSwap(ArmMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArmMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OdrvMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OdrvMessage::OdrvMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_OdrvMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vanguard.OdrvMessage)
}
OdrvMessage::OdrvMessage(const OdrvMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vanguard.OdrvMessage)
}

void OdrvMessage::SharedCtor() {
}

OdrvMessage::~OdrvMessage() {
  // @@protoc_insertion_point(destructor:vanguard.OdrvMessage)
  SharedDtor();
}

void OdrvMessage::SharedDtor() {
}

void OdrvMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OdrvMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OdrvMessage& OdrvMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_OdrvMessage.base);
  return *internal_default_instance();
}


void OdrvMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vanguard.OdrvMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OdrvMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vanguard.OdrvMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:vanguard.OdrvMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vanguard.OdrvMessage)
  return false;
#undef DO_
}

void OdrvMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vanguard.OdrvMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vanguard.OdrvMessage)
}

::google::protobuf::uint8* OdrvMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vanguard.OdrvMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vanguard.OdrvMessage)
  return target;
}

size_t OdrvMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vanguard.OdrvMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OdrvMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vanguard.OdrvMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OdrvMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OdrvMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vanguard.OdrvMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vanguard.OdrvMessage)
    MergeFrom(*source);
  }
}

void OdrvMessage::MergeFrom(const OdrvMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vanguard.OdrvMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OdrvMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vanguard.OdrvMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OdrvMessage::CopyFrom(const OdrvMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vanguard.OdrvMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OdrvMessage::IsInitialized() const {
  return true;
}

void OdrvMessage::Swap(OdrvMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OdrvMessage::InternalSwap(OdrvMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OdrvMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CamMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CamMessage::CamMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CamMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vanguard.CamMessage)
}
CamMessage::CamMessage(const CamMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vanguard.CamMessage)
}

void CamMessage::SharedCtor() {
}

CamMessage::~CamMessage() {
  // @@protoc_insertion_point(destructor:vanguard.CamMessage)
  SharedDtor();
}

void CamMessage::SharedDtor() {
}

void CamMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CamMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CamMessage& CamMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_CamMessage.base);
  return *internal_default_instance();
}


void CamMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vanguard.CamMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CamMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vanguard.CamMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:vanguard.CamMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vanguard.CamMessage)
  return false;
#undef DO_
}

void CamMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vanguard.CamMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vanguard.CamMessage)
}

::google::protobuf::uint8* CamMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vanguard.CamMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vanguard.CamMessage)
  return target;
}

size_t CamMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vanguard.CamMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CamMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vanguard.CamMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CamMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CamMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vanguard.CamMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vanguard.CamMessage)
    MergeFrom(*source);
  }
}

void CamMessage::MergeFrom(const CamMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vanguard.CamMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CamMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vanguard.CamMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CamMessage::CopyFrom(const CamMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vanguard.CamMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CamMessage::IsInitialized() const {
  return true;
}

void CamMessage::Swap(CamMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CamMessage::InternalSwap(CamMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CamMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutoMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoMessage::AutoMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_AutoMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:vanguard.AutoMessage)
}
AutoMessage::AutoMessage(const AutoMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vanguard.AutoMessage)
}

void AutoMessage::SharedCtor() {
}

AutoMessage::~AutoMessage() {
  // @@protoc_insertion_point(destructor:vanguard.AutoMessage)
  SharedDtor();
}

void AutoMessage::SharedDtor() {
}

void AutoMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AutoMessage::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutoMessage& AutoMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_AutoMessage.base);
  return *internal_default_instance();
}


void AutoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:vanguard.AutoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AutoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vanguard.AutoMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:vanguard.AutoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vanguard.AutoMessage)
  return false;
#undef DO_
}

void AutoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vanguard.AutoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vanguard.AutoMessage)
}

::google::protobuf::uint8* AutoMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vanguard.AutoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vanguard.AutoMessage)
  return target;
}

size_t AutoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vanguard.AutoMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutoMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vanguard.AutoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vanguard.AutoMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vanguard.AutoMessage)
    MergeFrom(*source);
  }
}

void AutoMessage::MergeFrom(const AutoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vanguard.AutoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AutoMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vanguard.AutoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoMessage::CopyFrom(const AutoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vanguard.AutoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoMessage::IsInitialized() const {
  return true;
}

void AutoMessage::Swap(AutoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoMessage::InternalSwap(AutoMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AutoMessage::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace vanguard
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vanguard::StandardMessage* Arena::CreateMaybeMessage< ::vanguard::StandardMessage >(Arena* arena) {
  return Arena::CreateInternal< ::vanguard::StandardMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vanguard::CommMessage* Arena::CreateMaybeMessage< ::vanguard::CommMessage >(Arena* arena) {
  return Arena::CreateInternal< ::vanguard::CommMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vanguard::CanMessage* Arena::CreateMaybeMessage< ::vanguard::CanMessage >(Arena* arena) {
  return Arena::CreateInternal< ::vanguard::CanMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vanguard::ArmMessage* Arena::CreateMaybeMessage< ::vanguard::ArmMessage >(Arena* arena) {
  return Arena::CreateInternal< ::vanguard::ArmMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vanguard::OdrvMessage* Arena::CreateMaybeMessage< ::vanguard::OdrvMessage >(Arena* arena) {
  return Arena::CreateInternal< ::vanguard::OdrvMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vanguard::CamMessage* Arena::CreateMaybeMessage< ::vanguard::CamMessage >(Arena* arena) {
  return Arena::CreateInternal< ::vanguard::CamMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::vanguard::AutoMessage* Arena::CreateMaybeMessage< ::vanguard::AutoMessage >(Arena* arena) {
  return Arena::CreateInternal< ::vanguard::AutoMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
